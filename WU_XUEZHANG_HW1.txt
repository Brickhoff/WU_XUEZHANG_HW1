# When done, submit this entire file to the autograder.

# Part 1

def sum arr
  arr = [0] if (arr.nil? || arr.empty?)
  arr.reduce(:+)
end

def max_2_sum arr
  sum(arr.sort.last(2))
end

def sum_to_n? arr, n

  if arr.length < 2
    return false
  else
    arr.combination(2).find{|x,y| x + y == n } ? true : false
  end
end

# Part 2

def hello(name)
  "Hello, " + name
end

def starts_with_consonant? s
  # i is Regex modifier, case insensitivity, ignore case
  #/ ..../ is Regex, ^ means begin
  
  /^[b-df-hj-np-tv-z]/i.match(s) != nil
end

def binary_multiple_of_4? s
  # ^ means begin, $ means end, * means mutiple [10]
  # 4 in binary is 100, therefore the ending must be 00
  return true if s == "0"
	/^[10]*00$/.match(s) != nil
end

# Part 3

class BookInStock
  attr_accessor :isbn
	attr_accessor :price

	def initialize(isbn, price)
		raise ArgumentError, 
			"Illegal argument" if isbn.empty?  or price <= 0
		@isbn = isbn
		@price = price
	end

	def price_as_string
		sprintf("$%2.2f", @price)
	end
end